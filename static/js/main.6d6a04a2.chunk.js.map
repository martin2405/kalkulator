{"version":3,"sources":["App.js","components/Result.js","components/Buttons.js","reportWebVitals.js","index.js"],"names":["App","state","firstSpanResult","secondSpanResult","handleClick","button","newSpanResult","setState","substring","length","sum","console","log","eval","lastMark","includes","className","this","click","React","Component","Result","props","Buttons","buttons","map","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8pDAKMA,I,q3BAEJC,MAAQ,CACNC,gBAAiB,GACjBC,iBAAkB,I,MAGpBC,YAAc,SAACC,QAAY,IAAD,YAEoB,MAAKJ,MAA1CC,gBAFiB,YAEjBA,gBAAiBC,iBAFA,YAEAA,iBAEpBG,cAAgB,GAEpB,GAAe,OAAXD,OACF,MAAKE,SAAS,CACZL,gBAAiB,GACjBC,iBAAkB,UAGf,GAAe,QAAXE,OAAkB,CAC3B,IAAKH,gBAAiB,OACtBI,cAAgBJ,gBAAgBM,UAAU,EAAGN,gBAAgBO,OAAS,GAEtE,MAAKF,SAAS,CACZL,gBAAiBI,qBAId,GAAe,MAAXD,OAAgB,CACzB,IAAKH,gBAAiB,OACtB,IAAMQ,IAAMP,iBAAmBD,gBAC/BS,QAAQC,IAAIC,KAAKH,MACjBJ,cAAgBO,KAAKH,KAErB,MAAKH,SAAS,CACZL,gBAAiBI,cACjBH,iBAAkB,SAIf,CACL,IAAMW,SAAWX,iBAAiBK,UAAUL,iBAAiBM,OAAS,GACtE,GAAe,MAAXJ,QAA6B,MAAXA,QAA6B,MAAXA,QAA6B,MAAXA,OAAgB,CACxE,GAAIS,SAASC,SAAS,MAAQD,SAASC,SAAS,MAAQD,SAASC,SAAS,MAAQD,SAASC,SAAS,OAASb,gBAAiB,OAC9H,MAAKK,SAAS,CACZJ,iBAAkBA,iBAAmBD,gBAAkBG,OACvDH,gBAAiB,SAEd,CACL,GAAiF,MAA7EA,gBAAgBM,UAAUN,gBAAgBO,OAAS,GAAiB,MAAXJ,SAAuC,MAAXA,SAAmBH,gBAAkB,OAC9H,MAAKK,SAAS,CACZL,gBAAiBA,gBAAkBG,Y,oPAS3C,WACA,OACE,kEAAKW,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,2DAAC,kDAAD,CAAQd,gBAAiBe,KAAKhB,MAAMC,gBAAiBC,iBAAkBc,KAAKhB,MAAME,mBAClF,kEAAKa,UAAU,oBAAf,SACE,2DAAC,mDAAD,CAASE,MAAOD,KAAKb,yB,KAlEbe,6CAAMC,WA0ETpB,2B,+BC/Ef,gBAaeqB,IAXA,SAACC,GACZ,OACA,sBAAKN,UAAU,qBAAf,UACI,sBAAMA,UAAU,gCAAhB,SAAiDM,EAAMpB,kBACvD,sBAAMc,UAAU,iCAAhB,SAAkDM,EAAMnB,wB,6BCNhE,gBAgBeoB,IAdC,SAACD,GAEb,IAEME,EAFc,CAAC,KAAM,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEjFC,KAAI,SAAApB,GAAM,OAAI,wBAAqBqB,QAAS,kBAAMJ,EAAMJ,MAAMb,IAAhD,SAA0DA,GAA7CA,MAEvD,OACI,mCACCmB,M,kICEMG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtC,EAAA,EAAD,MAEFuC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d6a04a2.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Result from './components/Result';\nimport Buttons from './components/Buttons';\n\nclass App extends React.Component {\n\n  state = {\n    firstSpanResult: '',\n    secondSpanResult: '',\n  }\n\n  handleClick = (button) => {\n\n    const {firstSpanResult, secondSpanResult} = this.state;\n\n    let newSpanResult = '';\n\n    if (button === 'AC') {\n      this.setState({\n        firstSpanResult: '',\n        secondSpanResult: '',\n      })\n      \n    } else if (button === 'DEL') {\n      if (!firstSpanResult) return\n      newSpanResult = firstSpanResult.substring(0, firstSpanResult.length - 1);\n\n      this.setState({\n        firstSpanResult: newSpanResult,\n      })\n\n\n    } else if (button === '=') {\n      if (!firstSpanResult) return\n      const sum = secondSpanResult + firstSpanResult\n      console.log(eval(sum))\n      newSpanResult = eval(sum);\n\n      this.setState({\n        firstSpanResult: newSpanResult,\n        secondSpanResult: ''\n      })\n\n\n    } else {\n      const lastMark = secondSpanResult.substring(secondSpanResult.length - 1);\n      if (button === '/' || button === '*' || button === '-' || button === '+') {\n        if (lastMark.includes('/') || lastMark.includes('*') || lastMark.includes('-') || lastMark.includes('+') || !firstSpanResult) return;\n        this.setState({\n          secondSpanResult: secondSpanResult + firstSpanResult + button,\n          firstSpanResult: '',\n        })\n      } else {\n        if (firstSpanResult.substring(firstSpanResult.length - 1  && button === '.') === '.' || (button === '.' && !firstSpanResult)) return;\n        this.setState({\n          firstSpanResult: firstSpanResult + button\n        })\n      }\n\n      \n    }\n  }\n\n\n  render () {\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <Result firstSpanResult={this.state.firstSpanResult} secondSpanResult={this.state.secondSpanResult}/>\n        <div className=\"buttons-container\">\n          <Buttons click={this.handleClick}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nconst Result = (props) => {\r\n    return(\r\n    <div className='calculator__result'>\r\n        <span className='calculator__result-first-span'>{props.firstSpanResult}</span>\r\n        <span className='calculator__result-second-span'>{props.secondSpanResult}</span>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Result;","import React from 'react';\r\n\r\nconst Buttons = (props) => {\r\n\r\n    const buttonsText = ['AC', 'DEL', '/', '1', '2', '3', '*', '4', '5', '6', '+', '7', '8', '9', '-', '.', '0', '='];\r\n\r\n    const buttons = buttonsText.map(button => <button key={button} onClick={() => props.click(button)}>{button}</button>)\r\n\r\n    return (\r\n        <>\r\n        {buttons}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Buttons;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}